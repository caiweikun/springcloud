
https://docs.spring.io/spring-data/elasticsearch/docs/3.2.0.RC3/reference/html/#preface.versions

The following table shows the Elasticsearch versions that are used by Spring Data Elasticsearch:

Spring Data Elasticsearch	Elasticsearch
3.2.x                       6.8.1

3.1.x                       6.2.2

3.0.x                       5.5.0

2.1.x                       2.4.0

2.0.x                       2.2.0

1.3.x                       1.5.2

------------------------------------------------------------

http://localhost:9200/_cluster/health
删除所有索引 curl -XDELETE http://localhost:9200/_all
所有索引： GET _cat/indices

删除一个索引编辑
用以下的请求来 删除索引:

DELETE /my_index
你也可以这样删除多个索引：

DELETE /index_one,index_two
DELETE /index_*
你甚至可以这样删除 全部 索引：

DELETE /_all
DELETE /*
-----------------------------------------------------

当前测试 Elasticsearch的版本是 6.8.4 ,spring-boot-starter-parent 2.1.4,  Spring Data Elasticsearch 3.1.6
该组合测试下是可以的。

-------------------------------------------------------

一般来说：
由于我当前的Elasticsearch的版本是 6.8.4，则必须引入 spring-boot-starter-parent 为 2.2.x 以上，这样我的 Spring Data Elasticsearch 才能是 3.2.x

--------------------------------------------------------

方法二  下载低版本的 Elasticsearch6.2.2，匹配 spring-boot-starter-parent 为 2.1.x, Spring Data Elasticsearch 才能是 3.1.x

下面我们重新下载 Elasticsearch6.2.2
https://www.elastic.co/cn/downloads/elasticsearch
https://www.elastic.co/cn/downloads/past-releases/elasticsearch-6-2-2

network.host: 192.168.31.107
transport.tcp.port: 9300
transport.tcp.compress: true
http.port: 9100

bin 目录下是相关的启动文件：
./elasticsearch
./elasticsearch -d (这是后台启动）

-------------------------------------------------------

http://127.0.0.1:9200
{
  "name" : "C8xM36u",
  "cluster_name" : "elasticsearch",
  "cluster_uuid" : "fS01JmT1RfSx-JOOZ3lnKw",
  "version" : {
    "number" : "6.2.2",
    "build_hash" : "10b1edd",
    "build_date" : "2018-02-16T19:01:30.685723Z",
    "build_snapshot" : false,
    "lucene_version" : "7.2.1",
    "minimum_wire_compatibility_version" : "5.6.0",
    "minimum_index_compatibility_version" : "5.0.0"
  },
  "tagline" : "You Know, for Search"
}
http://127.0.0.1:9200/_cluster/health
{
    "cluster_name": "elasticsearch",
    "status": "green",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 0,
    "active_shards": 0,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 0,
    "delayed_unassigned_shards": 0,
    "number_of_pending_tasks": 0,
    "number_of_in_flight_fetch": 0,
    "task_max_waiting_in_queue_millis": 0,
    "active_shards_percent_as_number": 100.0
}

--------------------------------------------------------------------------------------
Kibana 查看 elasticsearch 数据

Kibana 为快速熟悉Elasticsearch的操作提供极大的便利，下面就通过kibana熟悉几个基本的操作。
在Kibana中打开Dev Tools

删除所有的索引
DELETE /_all

查看所有的索引
GET _cat/indices


下面是创建索引

PUT user_index
{
  "mappings": {
    "_doc": {
      "properties": {
        "title":    { "type": "text"  },
        "name":     { "type": "text"  },
        "age":      { "type": "integer" }
      }
    }
  }
}


PUT product_index
{
  "mappings": {
    "_doc": {
      "properties": {
        "title":    { "type": "text"  },
        "body":     { "type": "text"  },
        "user_id":  {
          "type":   "keyword"
        },
        "created":  {
          "type":   "date",
          "format": "strict_date_optional_time||epoch_millis"
        }
      }
    }
  }
}


POST user_index/_doc
{
   "title": "manager",
   "name": "Tom Jerry",
   "age": 34
}
返回
{
  "_index" : "user_index",
  "_type" : "_doc",
  "_id" : "EDZoG24B7ehdiqCihclv",
  "_version" : 1,
  "result" : "created",
  "_shards" : {
    "total" : 2,
    "successful" : 1,
    "failed" : 0
  },
  "_seq_no" : 0,
  "_primary_term" : 1
}

GET /user_index/_doc/_search
{
  "query":{
    "match": {
        "name": "jerry"
    }
  }
}
返回
{
  "took" : 1,
  "timed_out" : false,
  "_shards" : {
    "total" : 5,
    "successful" : 5,
    "skipped" : 0,
    "failed" : 0
  },
  "hits" : {
    "total" : 1,
    "max_score" : 0.2876821,
    "hits" : [
      {
        "_index" : "user_index",
        "_type" : "_doc",
        "_id" : "EDZoG24B7ehdiqCihclv",
        "_score" : 0.2876821,
        "_source" : {
          "title" : "manager",
          "name" : "Tom Jerry",
          "age" : 34
        }
      }
    ]
  }
}

POST product_index/_doc
{
   "title": "desk",
   "body": "this is a good desk",
   "user_id": "12",
   "created": "2019-10-11"
}
返回
{
  "_index" : "product_index",
  "_type" : "_doc",
  "_id" : "FzZvG24B7ehdiqCipcma",
  "_version" : 1,
  "result" : "created",
  "_shards" : {
    "total" : 2,
    "successful" : 1,
    "failed" : 0
  },
  "_seq_no" : 0,
  "_primary_term" : 1
}

GET /product_index/_doc/FzZvG24B7ehdiqCipcma
返回
{
  "_index" : "product_index",
  "_type" : "_doc",
  "_id" : "FzZvG24B7ehdiqCipcma",
  "_version" : 1,
  "_seq_no" : 0,
  "_primary_term" : 1,
  "found" : true,
  "_source" : {
    "title" : "desk",
    "body" : "this is a good desk",
    "user_id" : "12",
    "created" : "2019-10-11"
  }
}



